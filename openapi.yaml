openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: Администрирование
    description: Администрирование - доступ админа к функционалу офиса
  - name: Обратная связь/отзыв
    description: Время создания отзыва устанавливается в БД с временной зоной 'UTC'
  - name: Участник переговорки/конференции
    description: >-
      Участники одной переговорки/конференции (далее встречи) имеют одну общую
      бронь
paths:
  /workplace/:
    put:
      tags:
        - Рабочее место
      summary: Изменение указанного места
      description: Все поля обязательны
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkPlaceUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Рабочее место
      summary: Создание рабочего места
      description: Все поля обязательны
      operationId: createWorkPlace
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkPlaceCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workPlaceType/:
    put:
      tags:
        - Тип места
      operationId: update_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkPlaceTypeDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Тип места
      operationId: createType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkPlaceTypeCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/:
    put:
      tags:
        - team-member-controller
      summary: Изменить данные(команду/сотрудника) участника команды
      operationId: update_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - team-member-controller
      operationId: createTeamMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamMemberCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team/:
    put:
      tags:
        - team-controller
      operationId: update_3
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - team-controller
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /role/:
    put:
      tags:
        - Роль
      summary: Изменение роли
      operationId: update_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Роль
      summary: Добавление роли
      operationId: createRole
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /office/:
    put:
      tags:
        - Офис
      summary: Изменение указанного офиса
      description: Все поля обязательны
      operationId: update_5
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Офис
      summary: Создание офиса
      description: Все поля обязательны
      operationId: createOffice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OfficeCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /image/{id}:
    get:
      tags:
        - Изображение
      summary: Получение изображения
      operationId: downloadImage
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    put:
      tags:
        - Изображение
      summary: Изменение изображения
      operationId: update_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - multipartImage
              type: object
              properties:
                multipartImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Изображение
      summary: Удаление изображения по id
      operationId: delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /floor/:
    put:
      tags:
        - Этаж
      summary: Изменение указанного этажа
      description: Все поля кроме карты обязательны
      operationId: updateFloor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloorUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Этаж
      summary: Добавление этажа
      description: Все поля кроме карты обязательны
      operationId: createFloor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloorCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int64
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /employee/:
    put:
      tags:
        - Сотрудник
      summary: Изменение указанного сотрудника
      description: Все поля обязательны
      operationId: update_7
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Сотрудник
      summary: Создание сотрудника
      description: Все поля кроме роли обязательны (роль по дефолту ROLE_EMPLOYEE - id 1)
      operationId: createEmployee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmployeeCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /city/:
    get:
      tags:
        - Город
      summary: Получить список всех городов
      operationId: getCitiesByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    put:
      tags:
        - Город
      summary: Изменение наименования города
      operationId: update_8
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CityDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Город
      summary: Добавление города
      operationId: createCity
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/:
    put:
      tags:
        - Бронирования
      summary: Изменение указанной брони
      operationId: update_9
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingUpdateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    post:
      tags:
        - Бронирования
      summary: Создать бронь места на указанного сотрудника
      description: Все поля обязательны
      operationId: createBooking
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /image/floor:
    post:
      tags:
        - Изображение
      summary: 'Этаж: Загрузка изображения - размер одного файла: max 10Мб'
      operationId: uploadFloorImage
      parameters:
        - name: floorId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - multipartImage
              type: object
              properties:
                multipartImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /image/employee:
    post:
      tags:
        - Изображение
      summary: 'Сотрудник: Загрузка изображения - размер одного файла: max 10Мб'
      operationId: uploadEmployeeImage
      parameters:
        - name: employeeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - multipartImage
              type: object
              properties:
                multipartImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /image/:
    post:
      tags:
        - Изображение
      summary: 'Загрузка изображения - размер одного файла: max 10Мб'
      operationId: uploadImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
                - multipartImage
              type: object
              properties:
                multipartImage:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /feedback/:
    post:
      tags:
        - Обратная связь/отзыв
      summary: Создание отзыва
      description: 'Ограничения по длине: title - 255, text - 500'
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackCreateDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /favPlace/:
    post:
      tags:
        - Избранное место
      summary: Добавление места в избранное
      operationId: add_1
      parameters:
        - name: placeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /conferee/:
    post:
      tags:
        - Участник переговорки/конференции
      summary: Добавление одного участника встречи
      operationId: createConferenceMember
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConferenceMemberCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/team:
    post:
      tags:
        - Бронирования
      summary: Создать брони места для команды
      description: >-
        В контексте данного метода holderId -> id команды, держателем брони
        назначается лидер команды
      operationId: createBookingForTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/group:
    post:
      tags:
        - Бронирования
      summary: Создать брони места для указанной группы людей
      description: >-
        Бронирующий назначается держателем брони. Если бронирующий хочет
        добавить себя в участники - добавить его id список.
      operationId: createBookingForGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookingGroupCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /administrating/:
    post:
      tags:
        - Администрирование
      summary: Добавление администрирования/предоставление доступа к офису
      operationId: createAdmin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdministratingCreateDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workplace/{id}:
    get:
      tags:
        - Рабочее место
      summary: Получение указанного места
      operationId: getWorkPlaceById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkPlaceGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Рабочее место
      summary: Удаление указанного места
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workplace/freeIntervals:
    get:
      tags:
        - Рабочее место
      summary: Получение свободных промежутков для бронирования места
      description: Свободные промежутки составляются с учетом рабочего времени офиса.
      operationId: getFreeIntervalsForPlace
      parameters:
        - name: placeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: date
          in: query
          description: 'Формат: yyyy-MM-dd'
          required: true
          schema:
            type: string
            format: date
          example: '2022-11-13'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TimeIntervalDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workplace/countOnFloor/{floorId}:
    get:
      tags:
        - Рабочее место
      summary: Количество мест каждого типа на указанный этаж
      operationId: getPlacesCountByFloor
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CountPlaceDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workplace/all:
    get:
      tags:
        - Рабочее место
      summary: Все рабочие места
      description: 1 <= size <= 20 (default 20)
      operationId: getPage
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkPlaceGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workplace/allIsFreeByFloor:
    get:
      tags:
        - Рабочее место
      summary: >-
        Все места одного типа на указанном этаже помеченные как
        занятые/свободные
      description: >-
        Для запроса необходим id этажа, id типа места, начало временного
        интервала и конец, а также параметры пагинации. 1 <= size <= 20 (default
        20)
      operationId: getIsFreeByFloor
      parameters:
        - name: floorId
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
          example: 1
        - name: typeId
          in: query
          required: true
          schema:
            minimum: 1
            type: integer
            format: int64
          example: 1
        - name: start
          in: query
          description: 'Формат: yyyy-MM-dd HH:mm'
          required: true
          schema:
            type: string
            format: date-time
          example: 2022-11-13 10:00
        - name: end
          in: query
          description: 'Формат: yyyy-MM-dd HH:mm'
          required: true
          schema:
            type: string
            format: date-time
          example: 2022-11-13 22:00
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagePlaceAvailabilityResponseDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workplace/allByFloor:
    get:
      tags:
        - Рабочее место
      summary: Все рабочие места на указанном этаже
      description: 1 <= size <= 20 (default 20)
      operationId: getPageByFloor
      parameters:
        - name: floorId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: typeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkPlaceGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workPlaceType/{id}:
    get:
      tags:
        - Тип места
      operationId: getById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkPlaceTypeDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workPlaceType/type/name:
    get:
      tags:
        - Тип места
      summary: Получить тип места по названию
      operationId: getByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkPlaceTypeDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workPlaceType/all:
    get:
      tags:
        - Тип места
      summary: Получить все типы мест
      operationId: getAll
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkPlaceTypeDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/{id}:
    get:
      tags:
        - team-member-controller
      operationId: getById_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamMemberDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/team/{teamId}:
    get:
      tags:
        - team-member-controller
      summary: Получить участника команды по id команды
      operationId: getByTeamId
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamMemberDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/team/name:
    get:
      tags:
        - team-member-controller
      summary: Получить участника команды по названию команды
      operationId: getByTeamName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamMemberDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/all:
    get:
      tags:
        - team-member-controller
      summary: Получить всех участников команд
      operationId: getAll_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamMemberDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/all/team/{teamId}:
    get:
      tags:
        - team-member-controller
      summary: Получить всех участников команды по id команды
      operationId: getAllTeamMemberByTeamId
      parameters:
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamMemberInfoDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/all/team/name:
    get:
      tags:
        - team-member-controller
      summary: Получить всех участников команды по названию команды
      operationId: getAllTeamMemberByTeamName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamMemberDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/all/employee/{employeeId}:
    get:
      tags:
        - team-member-controller
      summary: Получить все команды по id сотрудника
      operationId: getAllTeamByEmployeeId
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamMemberInfoTeamDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team/{id}:
    get:
      tags:
        - team-controller
      summary: Получить команду по id
      operationId: getById_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TeamDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - team-controller
      operationId: delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team/all:
    get:
      tags:
        - team-controller
      summary: Получить все команды
      operationId: getTeam
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team/allByName:
    get:
      tags:
        - team-controller
      summary: Получить все команды по названию
      operationId: getAllByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team/all/leader/{leaderId}:
    get:
      tags:
        - team-controller
      summary: Получить все команды по id тим-лидера
      operationId: getAllByLeaderId
      parameters:
        - name: leaderId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageTeamDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /role/{id}:
    get:
      tags:
        - Роль
      summary: Метод возвращает роль по ее id
      operationId: getRoleById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RoleDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Роль
      summary: Удаление роли
      operationId: delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /role/all:
    get:
      tags:
        - Роль
      summary: Метод возвращает все роли
      operationId: getRoles
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /profile:
    get:
      tags:
        - Профиль сотрудника
      summary: Получение всей информации своего профиля сотрудника
      description: Включает в себя данные о сотруднике, ближайшую бронь и команду
      operationId: getProfile
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProfileDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /office/{id}:
    get:
      tags:
        - Офис
      summary: Получение указанного офиса
      operationId: getOfficeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OfficeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Офис
      summary: Удаление указанного офиса
      operationId: delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /office/all:
    get:
      tags:
        - Офис
      summary: Все офисы
      description: 1 <= size <= 20 (default 20)
      operationId: getOffices
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOfficeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /office/allByAddress:
    get:
      tags:
        - Офис
      summary: 'Поиск среди офисов по адресу '
      description: 1 <= size <= 20 (default 20)
      operationId: getOfficesByAddress
      parameters:
        - name: address
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOfficeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /floor/{id}:
    get:
      tags:
        - Этаж
      summary: Получение указанного этажа
      operationId: getFloorById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FloorGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Этаж
      summary: Удаление этажа
      operationId: deleteFloor
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /floor/all:
    get:
      tags:
        - Этаж
      summary: Поиск всех этажей офиса
      operationId: getFloors
      parameters:
        - name: officeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageFloorGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /feedback/{id}:
    get:
      tags:
        - Обратная связь/отзыв
      summary: Получение указанного отзыва
      operationId: getById_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FeedbackGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Обратная связь/отзыв
      summary: Удаление отзыва
      operationId: delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /feedback/all:
    get:
      tags:
        - Обратная связь/отзыв
      summary: Получение всех отзывов
      description: 1 <= size <= 20 (default 20)
      operationId: getAll_2
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageFeedbackGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /feedback/allOfEmployee/{employeeId}:
    get:
      tags:
        - Обратная связь/отзыв
      summary: Получение всех отзывов указанного сотрудника
      description: 1 <= size <= 20 (default 20)
      operationId: getAllByEmployeeId
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageFeedbackGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /favPlace/allSelf:
    get:
      tags:
        - Избранное место
      summary: Получение своих (пользователя сессии) избранных мест
      operationId: getAllSelf
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkPlaceGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /favPlace/allSelfIsFree:
    get:
      tags:
        - Избранное место
      summary: >-
        Получение своих (пользователя сессии) избранных мест на этаже для
        бронирования - т.е. свободные/занятые
      operationId: getAllSelfIsFree
      parameters:
        - name: floorId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: start
          in: query
          description: 'Формат: yyyy-MM-dd HH:mm'
          required: true
          schema:
            type: string
            format: date-time
          example: 2022-11-13 10:00
        - name: end
          in: query
          description: 'Формат: yyyy-MM-dd HH:mm'
          required: true
          schema:
            type: string
            format: date-time
          example: 2022-11-13 22:00
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlaceAvailabilityResponseDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /favPlace/allOfEmployee/{employeeId}:
    get:
      tags:
        - Избранное место
      summary: Получение всех избранных мест указанного сотрудника
      operationId: getAllByEmployee
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageWorkPlaceGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /employee/{id}:
    get:
      tags:
        - Сотрудник
      summary: Получить сотрудника по id
      operationId: getEmployeeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Сотрудник
      summary: Удаление указанного сотрудника по id
      description: >-
        Сотрудник также удаляется из участников команд, а также, если сотрудник
        является лидером команды - она удаляется
      operationId: delete_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /employee/login:
    get:
      tags:
        - Сотрудник
      summary: Получить сотрудника по логину
      operationId: getEmployeeByLogin
      parameters:
        - name: login
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EmployeeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /employee/all:
    get:
      tags:
        - Сотрудник
      summary: Все сотрудники
      description: 1 <= size <= 20 (default 20)
      operationId: getEmployees
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageEmployeeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /employee/allByName:
    get:
      tags:
        - Сотрудник
      summary: Поиск среди сотрудников по имени
      description: 1 <= size <= 20 (default 20)
      operationId: getEmployeesByName
      parameters:
        - name: name
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageEmployeeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /conferee/employeesOfBooking/{bookingId}:
    get:
      tags:
        - Участник переговорки/конференции
      summary: Получить всех участников встреч (сотрудников) по id брони
      operationId: getAllByBookingId
      parameters:
        - name: bookingId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageEmployeeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /conferee/all:
    get:
      tags:
        - Участник переговорки/конференции
      summary: Получить всех участников всех встреч
      operationId: getConferenceMember
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageConferenceMemberCreateDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /city/{id}:
    get:
      tags:
        - Город
      summary: Получить город
      operationId: getCityById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CityDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Город
      summary: Удаление города
      operationId: deleteCity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /city/all:
    get:
      tags:
        - Город
      summary: Получить список городов
      operationId: getCities
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/{id}:
    get:
      tags:
        - Бронирования
      summary: Получение информации об указанной брони
      operationId: getById_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
    delete:
      tags:
        - Бронирования
      summary: Удаление указанной брони
      operationId: delete_12
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/office/:
    get:
      tags:
        - Бронирования
      summary: Получение страницы броней по офису (включая удаленные)
      operationId: getAllOfOffice
      parameters:
        - name: officeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: typeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: isActual
          in: query
          description: >-
            Параметр отвечает за выборку броней: актуальные - все. Параметр не
            обязателен, дефолтное значение - true.
          required: false
          schema:
            type: boolean
            default: true
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/conference:
    get:
      tags:
        - Бронирования
      summary: Получить брони с переговорок указанного сотрудника
      description: 1 <= size <= 20 (default 20)
      operationId: getConferenceBookings
      parameters:
        - name: employeeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/all:
    get:
      tags:
        - Бронирования
      summary: Получить все брони (включая удаленные)
      description: 1 <= size <= 20 (default 20)
      operationId: getBookings
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/allSelf:
    get:
      tags:
        - Бронирования
      summary: Получить брони пользователя сессии - держателя броней
      description: 1 <= size <= 20 (default 20)
      operationId: getSelfBookings
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/allInPeriod:
    get:
      tags:
        - Бронирования
      summary: Получить брони по месту в указанном периоде времени
      description: 1 <= size <= 20 (default 20)
      operationId: getBookingsInPeriod
      parameters:
        - name: placeId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/allByHolder/{id}:
    get:
      tags:
        - Бронирования
      summary: Получить брони указанного сотрудника - держателя броней
      description: 1 <= size <= 20 (default 20)
      operationId: getHolderBookings
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/allActual:
    get:
      tags:
        - Бронирования
      summary: Получить актуальные брони указанного сотрудника - держателя броней
      description: 1 <= size <= 20 (default 20)
      operationId: getActualBookings
      parameters:
        - name: holderId
          in: query
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /booking/allActualSelf:
    get:
      tags:
        - Бронирования
      summary: Получить актуальные брони пользователя сессии - держателя броней
      description: 1 <= size <= 20 (default 20)
      operationId: getSelfActualBookings
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookingGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /administrating/officesOfAdmin/{employeeId}:
    get:
      tags:
        - Администрирование
      summary: Получить все офисы по id администратора
      operationId: getAllOfficeById
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageOfficeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /administrating/all:
    get:
      tags:
        - Администрирование
      summary: Получить все "Администрирования"
      operationId: getAdmin
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageAdministratingDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /administrating/adminsOfOffice/{officeId}:
    get:
      tags:
        - Администрирование
      summary: Получить всех администраторов по id офиса
      operationId: getAllByOfficeId
      parameters:
        - name: officeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: >-
            Sorting criteria in the format: property,(asc|desc). Default sort
            order is ascending. Multiple sort criteria are supported.
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageEmployeeGetDto'
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /workPlaceType/delete/{id}:
    delete:
      tags:
        - Тип места
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /team_member/employee/{employeeId}/team/{teamId}:
    delete:
      tags:
        - team-member-controller
      operationId: delete_2
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /image/floor/{floorId}:
    delete:
      tags:
        - Изображение
      summary: Удаление изображения из этажа
      operationId: deleteFromFloor
      parameters:
        - name: floorId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /image/employee/{employeeId}:
    delete:
      tags:
        - Изображение
      summary: Удаление изображения из сотрудника
      operationId: deleteFromEmployee
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /favPlace/{employeeId}/place/{placeId}:
    delete:
      tags:
        - Избранное место
      summary: Удаление избранного места по id сотрудника и id места
      operationId: delete_8
      parameters:
        - name: employeeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: placeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /favPlace/self/{placeId}:
    delete:
      tags:
        - Избранное место
      summary: Удаление своего избранного места по id места
      operationId: delete_9
      parameters:
        - name: placeId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /conferee/{id}:
    delete:
      tags:
        - Участник переговорки/конференции
      summary: Удаление участника встречи
      operationId: delete_11
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
  /administrating/{id}:
    delete:
      tags:
        - Администрирование
      summary: Удаление администрирования/убрать доступ к функционалу офиса у админа
      operationId: delete_13
      parameters:
        - name: id
          in: path
          description: Id администрирования
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: >-
            Ошибки валидации. Два варианта возвращаемого JSON объекта (смотреть
            Examples)
          content:
            '*/*':
              schema:
                oneOf:
                  - $ref: '#/components/schemas/ExceptionDto'
                  - $ref: '#/components/schemas/ExceptionsDto'
              examples:
                Вариант с одной ошибкой:
                  description: Вариант с одной ошибкой
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    message: Что-либо не прошло валидацию.
                Вариант со списком ошибок:
                  description: Вариант со списком ошибок
                  value:
                    status: BAD_REQUEST
                    timestamp: 08-08-2008 08:08:08
                    errors:
                      field: Поле field не прошло валидацию.
                      name: Поле name не прошло валидацию.
        '404':
          description: Объект не найден
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
        '409':
          description: Объект уже существует
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ExceptionDto'
components:
  schemas:
    ExceptionDto:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        timestamp:
          type: string
          format: date-time
        message:
          type: string
    ExceptionsDto:
      type: object
      properties:
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        timestamp:
          type: string
          format: date-time
        errors:
          type: object
          additionalProperties:
            type: string
    WorkPlaceUpdateDto:
      required:
        - capacity
        - floorId
        - id
        - typeId
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        typeId:
          minimum: 1
          type: integer
          format: int64
        floorId:
          minimum: 1
          type: integer
          format: int64
        capacity:
          minimum: 1
          type: integer
          format: int32
    WorkPlaceTypeDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    TeamMemberDto:
      required:
        - employeeId
        - id
        - teamId
      type: object
      properties:
        id:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        employeeId:
          type: integer
          format: int64
    TeamDto:
      required:
        - leaderId
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        leaderId:
          type: integer
          format: int64
        name:
          type: string
    RoleDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        name:
          type: string
    OfficeUpdateDto:
      required:
        - address
        - bookingRange
        - cityId
        - endOfDay
        - id
        - startOfDay
        - workNumber
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        cityId:
          minimum: 1
          type: integer
          format: int64
        address:
          type: string
        workNumber:
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          type: string
        startOfDay:
          type: string
          format: hh:mm
          example: '00:00'
        endOfDay:
          type: string
          format: hh:mm
          example: '00:00'
        bookingRange:
          minimum: 1
          type: integer
          format: int32
    FloorUpdateDto:
      required:
        - floorNumber
        - id
        - officeId
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        officeId:
          minimum: 1
          type: integer
          format: int64
        floorNumber:
          type: integer
          format: int32
    EmployeeUpdateDto:
      required:
        - email
        - fullName
        - id
        - password
        - phoneNumber
        - roleId
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        roleId:
          minimum: 1
          type: integer
          format: int64
        fullName:
          type: string
        password:
          pattern: ^\w{8,}$
          type: string
        email:
          type: string
        phoneNumber:
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          type: string
    CityDto:
      required:
        - id
        - name
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        name:
          type: string
    BookingUpdateDto:
      required:
        - end
        - guests
        - holderId
        - id
        - start
        - workPlaceId
      type: object
      properties:
        id:
          minimum: 1
          type: integer
          format: int64
        holderId:
          minimum: 1
          type: integer
          format: int64
        workPlaceId:
          minimum: 1
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        guests:
          minimum: 0
          type: integer
          format: int32
    WorkPlaceCreateDto:
      required:
        - capacity
        - floorId
        - typeId
      type: object
      properties:
        typeId:
          minimum: 1
          type: integer
          format: int64
        floorId:
          minimum: 1
          type: integer
          format: int64
        capacity:
          minimum: 1
          type: integer
          format: int32
    WorkPlaceTypeCreateDto:
      type: object
      properties:
        name:
          type: string
    TeamMemberCreateDto:
      required:
        - employeeId
        - teamId
      type: object
      properties:
        teamId:
          type: integer
          format: int64
        employeeId:
          type: integer
          format: int64
    TeamCreateDto:
      required:
        - leaderId
        - name
      type: object
      properties:
        leaderId:
          type: integer
          format: int64
        name:
          type: string
    OfficeCreateDto:
      required:
        - address
        - bookingRange
        - cityId
        - endOfDay
        - startOfDay
        - workNumber
      type: object
      properties:
        cityId:
          minimum: 1
          type: integer
          format: int64
        address:
          type: string
        workNumber:
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          type: string
        startOfDay:
          type: string
          format: hh:mm
          example: '00:00'
        endOfDay:
          type: string
          format: hh:mm
          example: '00:00'
        bookingRange:
          minimum: 1
          type: integer
          format: int32
    FloorCreateDto:
      required:
        - floorNumber
        - officeId
      type: object
      properties:
        officeId:
          minimum: 1
          type: integer
          format: int64
        floorNumber:
          type: integer
          format: int32
    FeedbackCreateDto:
      required:
        - text
        - title
      type: object
      properties:
        title:
          maxLength: 255
          minLength: 0
          type: string
        text:
          maxLength: 500
          minLength: 0
          type: string
    EmployeeCreateDto:
      required:
        - email
        - fullName
        - login
        - password
        - phoneNumber
      type: object
      properties:
        roleId:
          type: integer
          format: int64
        fullName:
          type: string
        login:
          type: string
        password:
          pattern: ^\w{8,}$
          type: string
        email:
          type: string
        phoneNumber:
          pattern: ^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$
          type: string
    ConferenceMemberCreateDto:
      type: object
      properties:
        employeeId:
          type: integer
          format: int64
        bookingId:
          type: integer
          format: int64
    BookingCreateDto:
      required:
        - end
        - guests
        - holderId
        - start
        - workPlaceId
      type: object
      properties:
        holderId:
          minimum: 1
          type: integer
          format: int64
        workPlaceId:
          minimum: 1
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        guests:
          minimum: 0
          type: integer
          format: int32
    BookingGroupCreateDto:
      required:
        - end
        - guests
        - holderIds
        - start
        - workPlaceId
      type: object
      properties:
        holderIds:
          maxItems: 20
          minItems: 2
          type: array
          items:
            type: integer
            format: int64
        workPlaceId:
          minimum: 1
          type: integer
          format: int64
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        guests:
          minimum: 0
          type: integer
          format: int32
    AdministratingCreateDto:
      required:
        - employeeId
        - officeId
      type: object
      properties:
        employeeId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
    WorkPlaceGetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        typeName:
          type: string
        floorId:
          type: integer
          format: int64
        capacity:
          type: integer
          format: int32
    LocalTime:
      type: object
      properties:
        hour:
          type: integer
          format: int32
        minute:
          type: integer
          format: int32
        second:
          type: integer
          format: int32
        nano:
          type: integer
          format: int32
    TimeIntervalDto:
      type: object
      properties:
        start:
          $ref: '#/components/schemas/LocalTime'
        end:
          $ref: '#/components/schemas/LocalTime'
    CountPlaceDto:
      type: object
      properties:
        commonPlaceAmount:
          type: integer
          format: int32
        conferencePlaceAmount:
          type: integer
          format: int32
    PageWorkPlaceGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/WorkPlaceGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PagePlaceAvailabilityResponseDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/PlaceAvailabilityResponseDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PlaceAvailabilityResponseDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        typeName:
          type: string
        floorId:
          type: integer
          format: int64
        capacity:
          type: integer
          format: int32
        isFree:
          type: boolean
    PageWorkPlaceTypeDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/WorkPlaceTypeDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageTeamMemberDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageTeamMemberInfoDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberInfoDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    TeamMemberInfoDto:
      required:
        - employeeId
        - fullName
        - id
        - roleName
        - teamId
      type: object
      properties:
        id:
          type: integer
          format: int64
        teamId:
          type: integer
          format: int64
        employeeId:
          type: integer
          format: int64
        fullName:
          type: string
        roleName:
          type: string
    PageTeamMemberInfoTeamDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TeamMemberInfoTeamDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    TeamMemberInfoTeamDto:
      required:
        - id
        - leaderId
        - leaderName
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        leaderId:
          type: integer
          format: int64
        leaderName:
          type: string
        name:
          type: string
    PageTeamGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TeamGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    TeamGetDto:
      required:
        - id
        - leaderId
        - leaderName
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        leaderId:
          type: integer
          format: int64
        leaderName:
          type: string
        name:
          type: string
    PageTeamDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/TeamDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    BookingGetDto:
      type: object
      properties:
        infoBooking:
          $ref: '#/components/schemas/InfoBookingDto'
        infoPlace:
          $ref: '#/components/schemas/InfoPlaceDto'
        infoOffice:
          $ref: '#/components/schemas/InfoOfficeDto'
    EmployeeGetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        role:
          type: string
        fullName:
          type: string
        login:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        imageId:
          type: integer
          format: int64
    InfoBookingDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        makerId:
          type: integer
          format: int64
        makerName:
          type: string
        holderId:
          type: integer
          format: int64
        holderName:
          type: string
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        guests:
          type: integer
          format: int32
        isDeleted:
          type: boolean
    InfoOfficeDto:
      type: object
      properties:
        officeId:
          type: integer
          format: int64
        city:
          type: string
        address:
          type: string
    InfoPlaceDto:
      type: object
      properties:
        placeId:
          type: integer
          format: int64
        type:
          type: string
        floorNumber:
          type: integer
          format: int32
    ProfileDto:
      type: object
      properties:
        employee:
          $ref: '#/components/schemas/EmployeeGetDto'
        firstBooking:
          $ref: '#/components/schemas/BookingGetDto'
        firstTeam:
          $ref: '#/components/schemas/TeamGetDto'
    OfficeGetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cityName:
          type: string
        address:
          type: string
        workNumber:
          type: string
        startOfDay:
          $ref: '#/components/schemas/LocalTime'
        endOfDay:
          $ref: '#/components/schemas/LocalTime'
        bookingRange:
          type: integer
          format: int32
    PageOfficeGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/OfficeGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    FloorGetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
        floorNumber:
          type: integer
          format: int32
        imageId:
          type: integer
          format: int64
    PageFloorGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/FloorGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    FeedbackGetDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        employeeId:
          type: integer
          format: int64
        timeStamp:
          type: string
          format: date-time
        title:
          type: string
        text:
          type: string
    PageFeedbackGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageEmployeeGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageConferenceMemberCreateDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ConferenceMemberCreateDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageBookingGetDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BookingGetDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    AdministratingDto:
      required:
        - employeeId
        - id
        - officeId
      type: object
      properties:
        id:
          type: integer
          format: int64
        employeeId:
          type: integer
          format: int64
        officeId:
          type: integer
          format: int64
    PageAdministratingDto:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/AdministratingDto'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
